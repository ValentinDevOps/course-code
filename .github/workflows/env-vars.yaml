name: Environment Variables
on: [push]

env:
    WF_LEVEL_ENV: Available to all jobs

jobs: 
    env-vars-and-context:
        runs-on: ubuntu-latest
        #if: $GITHUB_REF == 'refs/heads/main' ESTO NO FUNCIONA
        if: github.ref == 'refs/heads/main' 
        env:
            JOB_LEVEL_ENV: Available to all steps in env-vars-and-context job
        steps:
            - name: Log ENV VAR
              run: echo $GITHUB_REF #esta variable de entorno se evalua dentro del runner machine
            - name: Log Context
              run: echo '${{github.ref}}' # mientras que aca github actions evalua el valor y le manda el echo con el valor al runner machine
            - name: Set Env Var
              # lo que esta en las lineas 22 y 23 (por ejemplo) es para setear variables de entorno de manera dinamica asignandose dentro del 
              #archivo de variables de entorno, que es $GITHUB_ENV
              run: |
               echo "NEW_ENV_VAR=$(date)" >> "$GITHUB_ENV" 
               echo "JOB_LEVEL_ENV=$RANDOM" >> "$GITHUB_ENV"
            - name: Multiline ENV Var
              run: |
               DELIMITER=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
               echo "RANDOM_JOKE<<$DELIMITER" >> "$GITHUB_ENV"
               echo "Here is a joke: " >> "$GITHUB_ENV"
               curl -s https://icanhazdadjoke.com/ >> "$GITHUB_ENV"
               echo "" >> "$GITHUB_ENV" 
               echo "$DELIMITER" >> "$GITHUB_ENV"
            - name: Log Custom ENV Vars
              env: 
                 STEP_LEVEL_ENV: Available to only this step
                 WF_LEVEL_ENV: Overriden in step
              run: |
                echo '${{env.STEP_LEVEL_ENV}}'
                echo $STEP_LEVEL_ENV
                echo $WF_LEVEL_ENV
                echo $JOB_LEVEL_ENV
                echo $NEW_ENV_VAR
                echo $RANDOM_JOKE
